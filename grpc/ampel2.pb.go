// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ampel2.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AmpelColour int32

const (
	AmpelColour_green  AmpelColour = 0
	AmpelColour_yellow AmpelColour = 1
	AmpelColour_red    AmpelColour = 2
)

var AmpelColour_name = map[int32]string{
	0: "green",
	1: "yellow",
	2: "red",
}

var AmpelColour_value = map[string]int32{
	"green":  0,
	"yellow": 1,
	"red":    2,
}

func (x AmpelColour) String() string {
	return proto.EnumName(AmpelColour_name, int32(x))
}

func (AmpelColour) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ccbe285bdc797369, []int{0}
}

type Colour struct {
	Colour               AmpelColour `protobuf:"varint,1,opt,name=colour,proto3,enum=grpc.AmpelColour" json:"colour,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Colour) Reset()         { *m = Colour{} }
func (m *Colour) String() string { return proto.CompactTextString(m) }
func (*Colour) ProtoMessage()    {}
func (*Colour) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccbe285bdc797369, []int{0}
}

func (m *Colour) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Colour.Unmarshal(m, b)
}
func (m *Colour) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Colour.Marshal(b, m, deterministic)
}
func (m *Colour) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Colour.Merge(m, src)
}
func (m *Colour) XXX_Size() int {
	return xxx_messageInfo_Colour.Size(m)
}
func (m *Colour) XXX_DiscardUnknown() {
	xxx_messageInfo_Colour.DiscardUnknown(m)
}

var xxx_messageInfo_Colour proto.InternalMessageInfo

func (m *Colour) GetColour() AmpelColour {
	if m != nil {
		return m.Colour
	}
	return AmpelColour_green
}

type Ack struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccbe285bdc797369, []int{1}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccbe285bdc797369, []int{2}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("grpc.AmpelColour", AmpelColour_name, AmpelColour_value)
	proto.RegisterType((*Colour)(nil), "grpc.colour")
	proto.RegisterType((*Ack)(nil), "grpc.ack")
	proto.RegisterType((*Null)(nil), "grpc.null")
}

func init() {
	proto.RegisterFile("ampel2.proto", fileDescriptor_ccbe285bdc797369)
}

var fileDescriptor_ccbe285bdc797369 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xd1, 0x0a, 0x82, 0x30,
	0x14, 0x86, 0x33, 0x6d, 0xb6, 0x93, 0x84, 0x9d, 0x2b, 0xf1, 0xa6, 0x90, 0x82, 0x0a, 0xf2, 0x42,
	0x1f, 0xa1, 0x37, 0x10, 0x7a, 0x00, 0x5b, 0xc3, 0x0b, 0x97, 0x93, 0x4d, 0x89, 0xde, 0x3e, 0xdc,
	0x34, 0xea, 0x6e, 0x3b, 0xe7, 0xff, 0xf8, 0xbf, 0x03, 0x41, 0xf9, 0x6c, 0xb9, 0xc8, 0xd2, 0x56,
	0xc9, 0x4e, 0xa2, 0x57, 0xa9, 0x96, 0x25, 0x39, 0x10, 0x26, 0x85, 0xec, 0x15, 0x9e, 0xa6, 0x57,
	0xe4, 0xec, 0x9c, 0xe3, 0x3a, 0xdb, 0xa4, 0x43, 0x20, 0x35, 0xcc, 0xd5, 0x2c, 0x8a, 0x31, 0x90,
	0x6c, 0xc1, 0x2d, 0x59, 0x8d, 0x11, 0xf8, 0xba, 0x67, 0x8c, 0x6b, 0x6d, 0x90, 0x65, 0x31, 0x7d,
	0x13, 0x02, 0x5e, 0xd3, 0x0b, 0x71, 0xbe, 0xc0, 0xea, 0x87, 0x47, 0x0a, 0x8b, 0x4a, 0x71, 0xde,
	0x84, 0x33, 0x04, 0x20, 0x6f, 0x2e, 0x84, 0x7c, 0x85, 0x0e, 0xfa, 0xe0, 0x2a, 0xfe, 0x08, 0xe7,
	0xd9, 0x0d, 0x88, 0x55, 0xc4, 0x3d, 0x50, 0xcd, 0xbb, 0x11, 0x0b, 0xac, 0x89, 0x2d, 0x8f, 0xe9,
	0xe8, 0xc5, 0x6a, 0x3c, 0x00, 0xad, 0xbe, 0x29, 0xb0, 0xf3, 0xa1, 0x37, 0xfe, 0x23, 0xee, 0xc4,
	0x1c, 0x9c, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x24, 0x23, 0x37, 0xd4, 0x00, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Ampel2Client is the client API for Ampel2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Ampel2Client interface {
	SetColour(ctx context.Context, in *Colour, opts ...grpc.CallOption) (*Ack, error)
	GetColour(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Colour, error)
}

type ampel2Client struct {
	cc grpc.ClientConnInterface
}

func NewAmpel2Client(cc grpc.ClientConnInterface) Ampel2Client {
	return &ampel2Client{cc}
}

func (c *ampel2Client) SetColour(ctx context.Context, in *Colour, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/grpc.ampel2/setColour", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ampel2Client) GetColour(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Colour, error) {
	out := new(Colour)
	err := c.cc.Invoke(ctx, "/grpc.ampel2/getColour", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Ampel2Server is the server API for Ampel2 service.
type Ampel2Server interface {
	SetColour(context.Context, *Colour) (*Ack, error)
	GetColour(context.Context, *Null) (*Colour, error)
}

// UnimplementedAmpel2Server can be embedded to have forward compatible implementations.
type UnimplementedAmpel2Server struct {
}

func (*UnimplementedAmpel2Server) SetColour(ctx context.Context, req *Colour) (*Ack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetColour not implemented")
}
func (*UnimplementedAmpel2Server) GetColour(ctx context.Context, req *Null) (*Colour, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColour not implemented")
}

func RegisterAmpel2Server(s *grpc.Server, srv Ampel2Server) {
	s.RegisterService(&_Ampel2_serviceDesc, srv)
}

func _Ampel2_SetColour_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Colour)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Ampel2Server).SetColour(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ampel2/SetColour",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Ampel2Server).SetColour(ctx, req.(*Colour))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ampel2_GetColour_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Ampel2Server).GetColour(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ampel2/GetColour",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Ampel2Server).GetColour(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ampel2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.ampel2",
	HandlerType: (*Ampel2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "setColour",
			Handler:    _Ampel2_SetColour_Handler,
		},
		{
			MethodName: "getColour",
			Handler:    _Ampel2_GetColour_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ampel2.proto",
}
